/*Одномерные массивы. Вычислить среднее арифметическое элементов массива Х,

расположенных между максимальным и минимальным элементами.

 

Если в массиве несколько минимальных\максимальных элементов,

считать минимальным/максимальным крайний левый/правый из них.

 

Если минимальный элемент в массиве расположен до максимального элемента,

отсортировать по возрастанию группу элементов от минимального до максимального*/

 

#include <iostream>

 

using namespace std;

 

int Zadanie_2 (int ish [], int razm) {

      int max, index_max,min, index_min; //минимальное и максимальное значение, их индексы соотв.

      max=min=ish[0]; //сразу пишем в мин и макс первое значение

     

      double sr_arif=0; //переменная для СУММЫ значений, сразу добавляем туда первый элемент

 

      int temp; //Временная переменная для извлечения значения из массивы

 

      for (int i=1;i<razm;i++) {//цикл начинаем со ВТОРОГО ЗНАЧЕНИЯ, т.к. первое мы сохранили

            //извлекаем значение

            temp=ish[i];

            //ищем минимум, сохраняем значение и индекс

            if (temp<min) {

            min=temp;

            index_min=i;

            }

            //смотрим максимум, сохраняем значение и индекс

 

            if (temp>max||temp==max) {

            max=temp;

            index_max=i;

            }

      }

      //второй проход от минимального к максимальному с сортировкой:

      //1. вначале смотрим как расположены элементы - если минимальный левее максимального, то попутно сортируем

      //2. идем по массиву и считаем среднее

      temp=0;//очищаем переменную

     

 

      if (index_max>index_min) { //сортировка нужна

            cout <<"Выбираем значения для сортировки...\n";

            int pusirec_temp=0;

            for (int z=index_min;z<=index_max;z++) {

                  temp=ish[z];

                  sr_arif=sr_arif+temp;

                  for (int j=index_max-1;j>z;j--) {

                        if (ish[j]<ish[j-1]) {

                             //swap (ish[j], ish[j-1]);//используем функцию swap

                             pusirec_temp=ish[j];

                             ish[j]=ish[j-1];

                             ish[j-1]=pusirec_temp;

                             pusirec_temp=0;

                        }

                  }

                 

            }

            cout<<"Всего отобрано: " <<index_max-index_min+1<<", значения: " << endl;

            for (int z=index_min;z<=index_max;z++){

                  cout<<ish[z]<<" " <<z<<endl;

            }

 

            cout<<"Среднее арифметическое: "<<sr_arif/(index_max-index_min+1)<<endl;

      }

      else {//сортировка не нужна

            cout <<"Выводим значения БЕЗ сортировки...\n";

      for (int z=index_max;z<=index_min;z++) {

            temp=ish[z];

            sr_arif=sr_arif+temp;

            cout<<temp<<" "<<z<<endl;

      }

      cout<<"Всего отобрано: " <<index_min-index_max+1<<endl;

      cout<<"Среднее арифметическое: "<<sr_arif/(index_min-index_max+1)<<endl;

      }

     

      return 0;

}

 

 

int main () {

      //по-прежнему говорим и пишем по-русски...

      setlocale (LC_ALL, "Russian");

      //объявляем тестовый массив...

      int primer [] = {19,0,663,1,0,7,29,9,30,3,10,-30,59,-1,-2,256,-100,25,-11000,20};

      //...и его длинну

      int n=20;

      //выводим на экран сам массив с индексами

      for (int i=0; i<n; i++) {

      cout<< primer[i]<< " " <<i <<endl;

      }

      cout<<endl;

      Zadanie_2 (primer,n);//результат задания

      system ("pause");

      return 0;

}